name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install example dependencies
        run: |
          cd examples/nextjs-app
          bun install --frozen-lockfile

      - name: Run TypeScript check
        run: bun run typecheck

      - name: Run linting
        run: bun run lint

      - name: Check formatting
        run: bun run format:check

  test-adapter:
    name: Test Turso Adapter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build adapter
        run: bun run build

      - name: Run adapter tests
        run: bun run test:run

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: success()
        with:
          file: ./coverage/lcov.info
          flags: adapter
          name: adapter-coverage

  test-example:
    name: Test Next.js Example
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install example dependencies
        run: |
          cd examples/nextjs-app
          bun install --frozen-lockfile

      - name: Build adapter
        run: bun run build

      - name: Run example tests
        run: |
          cd examples/nextjs-app
          bun test

      - name: Build Next.js example
        run: |
          cd examples/nextjs-app
          bun run build

  docker-build:
    name: Test Docker Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build development image
        run: |
          docker build --target dev -t better-auth-turso:dev .

      - name: Build production image
        run: |
          docker build --target runner -t better-auth-turso:prod .

      - name: Test development container
        run: |
          docker run --rm -d --name test-dev better-auth-turso:dev
          sleep 5
          docker stop test-dev

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test-adapter]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install example dependencies
        run: |
          cd examples/nextjs-app
          bun install --frozen-lockfile

      - name: Build adapter
        run: bun run build

      - name: Create test database
        run: touch examples/nextjs-app/test.db

      - name: Run integration tests
        run: |
          cd examples/nextjs-app
          TURSO_DATABASE_URL="file:./test.db" bun test simple-auth.test.ts

      - name: Start Next.js app (health check)
        run: |
          cd examples/nextjs-app
          TURSO_DATABASE_URL="file:./test.db" timeout 30s bun dev &
          sleep 10
          curl -f http://localhost:3000 || exit 1

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run security audit
        run: bun audit

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
